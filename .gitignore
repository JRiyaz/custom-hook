### VisualStudioCode template

### VisualStudio template
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using Sublime Text
# *.sublime-project

# Recycle Bin used on file shares
$RECYCLE.BIN/

# TFS 2012 Local Workspace
$tf/

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# GhostDoc plugin setting file
*.GhostDoc.xml

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# MSBuild Binary and Structured Log
*.binlog

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Visual Studio code coverage results
*.coverage
*.coveragexml

# DotCover is a Code Coverage Tool
*.dotCover

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio Trace Files
*.e2e

# Guidance Automation Toolkit
*.gpState

# Telerik's JustMock configuration file
*.jmconfig

# Windows shortcuts
*.lnk

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# SQL Server files
*.mdf
*.ldf
*.ndf

# MightyMoose
*.mm.*
AutoTest.Net/

# Translations
*.mo
*.pot

# Visual Studio 6 technical files
*.ncb
*.aps

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# NVidia Nsight GPU debugger configuration file
*.nvuser

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 build log
*.plg

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# SageMath parsed files
*.sage.py

# JetBrains Rider
*.sln.iml

# C extensions
*.so

# Dump file
*.stackdump

# Workspace files are user-specific
*.sublime-workspace

### SublimeText template
# Cache files for Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Tabs Studio
*.tss

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Built Visual Studio Code Extensions
*.vsix

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

### Linux template
*~

### VirtualEnv template
# Virtualenv
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
.Python
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
.venv
pip-selfcheck.json

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Linux trash folder which might appear on any partition or disk
.Trash-*

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# CodeRush personal settings
.cr/personal

# KDE directory preferences
.directory

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# FAKE - F# Make
.fake/

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# Local History for Visual Studio Code
.history/

# Local History for Visual Studio Code
.history/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Jupyter Notebook
.ipynb_checkpoints

# Local History for Visual Studio
.localhistory/

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Paket dependency manager
.paket/paket.exe
paket-files/

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml
.vscode/
.idea/

# PyBuilder
.pybuilder/
target/

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Rope project settings
.ropeproject

# Web workbench (sass)
.sass-cache/

# Scrapy stuff:
.scrapy

# Spyder project settings
.spyderproject
.spyproject

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
Pipfile

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Visual Studio History (VSHistory) files
.vshistory/

# mkdocs documentation
/site

# Azure Stream Analytics local run output
ASALocalRun/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Benchmark Results
BenchmarkDotNet.Artifacts/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Microsoft Fakes
FakesAssemblies/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# Visual Studio 2017 auto generated files
Generated\ Files/

# RIA/Silverlight projects
Generated_Code/

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# OpenCover UI analysis results
OpenCover/

# Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

### Windows template
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Folder config file
[Dd]esktop.ini

# Installshield output folder
[Ee]xpress/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# Chutzpah Test files
_Chutzpah*

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

### Python template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Microsoft Azure Build Output
csx/
*.build.csdef

# Cython debug symbols
cython_debug/

# Sphinx documentation
docs/_build/

# Microsoft Azure Emulator
ecf/
rcf/

# BeatPulse healthcheck temp database
healthchecksdb

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Flask stuff:
instance/
.webassets-cache

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Mono auto generated files
mono_crash.*

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# IPython
profile_default/
ipython_config.py

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# Click-Once directory
publish/

# SFTP configuration file
sftp-config.json
sftp-config-alt*.json
